# Generated by Django 3.2.8 on 2021-10-10 08:30

import django.contrib.auth.models
from django.db import migrations, models
import django.db.models.deletion


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('auth', '0012_alter_user_first_name_max_length'),
    ]

    operations = [
        migrations.CreateModel(
            name='Mentor',
            fields=[
                ('user_ptr', models.OneToOneField(auto_created=True, on_delete=django.db.models.deletion.CASCADE, parent_link=True, to='auth.user')),
                ('ment_id', models.AutoField(primary_key=True, serialize=False)),
                ('main_skill', models.CharField(choices=[('JAVA_SCRIPT', 'java script'), ('DATA_SCIENCE', 'data science'), ('PYTHON', 'python'), ('AUTOMATIC_TESTING', 'automatic testing')], default='PYTHON', max_length=50)),
                ('skill_level', models.CharField(choices=[('LOW', 'low'), ('MIDDLE', 'middle'), ('HIGH', 'high')], default='PYTHON', max_length=50)),
            ],
            options={
                'verbose_name': 'user',
                'verbose_name_plural': 'users',
                'abstract': False,
            },
            bases=('auth.user',),
            managers=[
                ('objects', django.contrib.auth.models.UserManager()),
            ],
        ),
        migrations.CreateModel(
            name='Organization',
            fields=[
                ('org_id', models.AutoField(primary_key=True, serialize=False)),
                ('company_name', models.CharField(max_length=50)),
                ('url', models.CharField(max_length=50)),
                ('contact_number', models.CharField(max_length=50)),
            ],
        ),
        migrations.CreateModel(
            name='Student',
            fields=[
                ('user_ptr', models.OneToOneField(auto_created=True, on_delete=django.db.models.deletion.CASCADE, parent_link=True, to='auth.user')),
                ('stud_id', models.AutoField(primary_key=True, serialize=False)),
            ],
            options={
                'verbose_name': 'user',
                'verbose_name_plural': 'users',
                'abstract': False,
            },
            bases=('auth.user',),
            managers=[
                ('objects', django.contrib.auth.models.UserManager()),
            ],
        ),
        migrations.CreateModel(
            name='Request',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created', models.DateTimeField(auto_now_add=True)),
                ('start_date', models.DateTimeField()),
                ('period_days', models.DurationField()),
                ('desired_skill', models.CharField(choices=[('JAVA_SCRIPT', 'java script'), ('DATA_SCIENCE', 'data science'), ('PYTHON', 'python'), ('AUTOMATIC_TESTING', 'automatic testing')], default='PYTHON', max_length=50)),
                ('desired_skill_level', models.CharField(choices=[('LOW', 'low'), ('MIDDLE', 'middle'), ('HIGH', 'high')], default='PYTHON', max_length=50)),
                ('accepted', models.BooleanField()),
                ('mentor_id', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='mentor_selection.mentor')),
                ('student_id', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='mentor_selection.student')),
            ],
        ),
        migrations.CreateModel(
            name='CustomUser',
            fields=[
                ('user_ptr', models.OneToOneField(auto_created=True, on_delete=django.db.models.deletion.CASCADE, parent_link=True, to='auth.user')),
                ('us_id', models.AutoField(primary_key=True, serialize=False)),
                ('e_mail', models.EmailField(max_length=254)),
                ('phone_number', models.CharField(max_length=50)),
                ('organization_id', models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, to='mentor_selection.organization')),
            ],
            options={
                'verbose_name': 'user',
                'verbose_name_plural': 'users',
                'abstract': False,
            },
            bases=('auth.user',),
            managers=[
                ('objects', django.contrib.auth.models.UserManager()),
            ],
        ),
    ]
